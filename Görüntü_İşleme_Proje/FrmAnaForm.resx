<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8ChQBwAAAABJRU5ErkJggg==
</value>
  </data>
</root>